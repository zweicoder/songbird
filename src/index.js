const parsed = require('dotenv').config();
const axios = require('axios');
const qs = require('query-string');
const {
  getAllUserTracks,
  getRecentlyAddedTracks,
  getPopularTracks,
} = require('./trackService.js');
const { createPlaylist, syncPlaylistSongs } = require('./playlistService.js');
const { refreshAccessToken } = require('./oauth2Service.js');

async function main() {
  const userId = 'heinekenchong';
  const refreshToken =
    'AQDae5GRoMQ3W9OHQPCpv7z5Bkm9n2a5FP7tm_xeV8zARr91_ajX-oBhZX_FjzVrQ4wE61nZzWluGD35pn9VKdn6t7otrE7WMpeb_O8-gJrv1CdtYHyFixfCuVvIxi-s8Y0';

  const refreshResponse = await refreshAccessToken(refreshToken);
  if (refreshResponse.err) {
    return;
  }

  const accessToken = refreshResponse.result;
  const userOpts = { userId, accessToken };

  // Create playlist with songs
  const playlistOpts = {
    name: 'test playlist pls ignore',
    description: 'Autogenerated by Songbird',
  };
  const createPlaylistResponse = await createPlaylist(userOpts, playlistOpts);
  if (createPlaylistResponse.err) {
    return;
  }

  // Sync playlist songs periodically
  const createdPlaylistId = createPlaylistResponse.id;

  // Get some tracks
  // TODO let user preview the tracks probably
  const tracks = await getAllUserTracks(userOpts);
  const popularTracks = getPopularTracks(tracks, 50);
  // console.log(getRecentlyAddedTracks(tracks, 25));

  const syncResponse = await syncPlaylistSongs(
    userOpts,
    createdPlaylistId,
    popularTracks
  );
  if (syncResponse.err) {
    return;
  }

  // Get  list of playlists and see if it already exists / check db?
}

main();
