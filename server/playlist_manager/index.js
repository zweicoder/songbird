const parsed = require('dotenv').config();
const axios = require('axios');
const qs = require('query-string');
const {
  getAllUserTracks,
  getRecentlyAddedTracks,
  getPopularTracks,
  getTopTracks,
  TIME_RANGE_OPTS,
} = require('./trackService.js');
const { createPlaylist, syncPlaylistSongs } = require('./playlistService.js');
const { refreshAccessToken } = require('./oauth2Service.js');

async function main() {
  const userId = 'heinekenchong';
  const refreshToken = process.env.REFRESH_TOKEN;

  const refreshResponse = await refreshAccessToken(refreshToken);
  if (refreshResponse.err) {
    return;
  }

  const accessToken = refreshResponse.result;
  console.log('Access Token for dev use: ', accessToken);
  const userOpts = { userId, accessToken };

  // Get some tracks
  const getTopTrackResponse = await getTopTracks(userOpts, TIME_RANGE_OPTS.SHORT_TERM);
  if (getTopTrackResponse.err) return;
  const topTracks = getTopTrackResponse.result;
  // const tracks = await getAllUserTracks(userOpts);
  // const popularTracks = getPopularTracks(tracks, 50);
  // console.log(getRecentlyAddedTracks(tracks, 25));

  // Create playlist with songs
  const playlistOpts = {
    name: 'test playlist pls ignore',
    description: 'Autogenerated by Songbird',
  };
  const createPlaylistResponse = await createPlaylist(userOpts, playlistOpts);
  if (createPlaylistResponse.err) {
    return;
  }

  // Sync playlist songs periodically
  const createdPlaylistId = createPlaylistResponse.id;


  const syncResponse = await syncPlaylistSongs(
    userOpts,
    createdPlaylistId,
    // popularTracks
    topTracks
  );
  if (syncResponse.err) {
    return;
  }

  // Get  list of playlists and see if it already exists / check db?
}

main();
